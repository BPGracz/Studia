<?xml version="1.0" encoding="UTF-8"?><JavaBlocks author="BPGracz" scriptEngine="JavaScript" version="6010">
  <option fullConnectorValues="true" grid="false" pascal="false"/>
  <flowchart name="Start">
    <canvas interval="200" posX="-138.32861" posY="561.0" zoom="4"/>
    <blocks>
      <block id="1" name="Start" type="START">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="-320.0" posY="-670.0"/>
        <comment>Start</comment>
        <connect ID="4"/>
      </block>
      <block id="2" type="RETURN">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="-310.0" posY="-300.0"/>
        <comment>End</comment>
      </block>
      <block id="3" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="520.0" posY="-670.0"/>
        <content>Writeln("OKREŚL TRÓJKI")&#13;;	lista = [2,43,6,7,3,34,24,11,23,45,66,88,3,71,8,9,5,17,12]&#13;;	n = lista.length&#13;;	Writeln("Lista zawiera " + n + " liczb")&#13;;	listaTr = []&#13;;	pomocnicza = []&#13;;	for(zakres = 4; zakres&lt;2*n; zakres*=2)&#13;;	{&#13;;	    for (x = 0; x&lt;n; x+=zakres)&#13;;	    {&#13;;	    tr1 = x;&#13;;	    tr2 = x + Math.floor((zakres-1) / 2)&#13;;	    pzakres=zakres;&#13;;	    while (tr2 &gt; n-1)&#13;;	        {&#13;;	        pzakres = Math.floor(pzakres / 2)&#13;;	        tr2 = Math.floor(x + (pzakres - 1) / 2)&#13;;	        }&#13;;	    tr3 = x + zakres - 1;&#13;;	    if (tr3 &gt; n-1)&#13;;	        tr3 = n-1;&#13;;	    listaTr.push([tr1, tr2, tr3])&#13;;	    Writeln([tr1, tr2, tr3])    &#13;;	    }&#13;;	}</content>
        <connect ID="5"/>
      </block>
      <block id="4" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="20.0" posY="-670.0"/>
        <content>function scal(odPoz, srodek, doPoz) &#13;;	{i=doPoz; j=srodek+1&#13;;	for (k=odPoz; k&lt;=doPoz; k++)&#13;;	    {&#13;;	        if (i&gt;srodek)&#13;;	            lista[k]=pomocnicza[j++]&#13;;	        else&#13;;	            if (j&gt;doPoz)&#13;;	                lista[k]=pomocnicza[i++]&#13;;	            else&#13;;	                if (pomocnicza[j]&lt;pomocnicza[i])&#13;;	                    lista[k]=pomocnicza[j++]&#13;;	                else&#13;;	                    lista[k]=pomocnicza[i++]&#13;;	    }&#13;;	Writeln(lista)&#13;;	}</content>
        <connect ID="3"/>
      </block>
      <block id="5" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="520.0" posY="-300.0"/>
        <content>Writeln("Uporządkuj pary")&#13;;	for (i=0; i&lt;lista.length-1; i+=2)&#13;;	    if (lista[i]&gt;lista[i+1])&#13;;	    {&#13;;	        pom=lista[i]&#13;;	        lista[i]=lista[i+1]&#13;;	        lista[i+1]=pom&#13;;	    }&#13;;	Writeln(lista)&#13;;	</content>
        <connect ID="6"/>
      </block>
      <block id="6" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="20.0" posY="-300.0"/>
        <content>Writeln("Posortuj listę")&#13;;	ile=lista.length&#13;;	ileTr=listaTr.length&#13;;	for (il=0; il&lt;ileTr; il++)&#13;;	{&#13;;	    if (listaTr[il][0] == 0)&#13;;	        for (k1=0; k1&lt;ile; k1++)&#13;;	            pomocnicza[k1]=lista[k1]&#13;;	    scal(listaTr[il][0], listaTr[il][1], listaTr[il][2])&#13;;	}&#13;;	Writeln(lista)</content>
        <connect ID="2"/>
      </block>
    </blocks>
  </flowchart>
</JavaBlocks>
